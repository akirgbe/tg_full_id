import os
import sys

from loguru import logger

from db.database import Database

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É (–º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã)
project_root = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, project_root)


def clear_and_fill_database():
    """–û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
    db = Database()
    logger.info(f"–†–∞–±–æ—Ç–∞–µ–º —Å –±–∞–∑–æ–π: {db.db_path}")
    logger.info("=" * 50)

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    current_users = db.get_all_users()
    logger.info(f"–¢–µ–∫—É—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–∞–∑–µ ({len(current_users)}):")
    for user in current_users:
        logger.info(f"   üë§ ID: {user.user_id} | Username: {user.username or 'N/A'}")

    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞ –æ—á–∏—Å—Ç–∫—É
    if current_users:
        logger.warning("–í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ—Ö —Ç–µ–∫—É—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!")
        response = input("   –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): ")
        if response.lower() != 'y':
            logger.info("–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            db.close()
            return
    else:
        logger.info("–ë–∞–∑–∞ –ø—É—Å—Ç–∞, –º–æ–∂–Ω–æ –∑–∞–ø–æ–ª–Ω—è—Ç—å")

    # –û—á–∏—â–∞–µ–º –±–∞–∑—É
    if current_users:
        logger.info("–û—á–∏—â–∞–µ–º –±–∞–∑—É...")
        for user in current_users:
            db.remove_user(user.user_id)
        logger.info(f"–£–¥–∞–ª–µ–Ω–æ {len(current_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    new_users = [439716429]
    logger.info(f"–î–æ–±–∞–≤–ª—è–µ–º {len(new_users)} –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
    added_count = 0
    for user_id in new_users:
        if db.add_user(user_id):
            logger.info(f"   –î–æ–±–∞–≤–ª–µ–Ω: {user_id}")
            added_count += 1
        else:
            logger.error(f"   –û—à–∏–±–∫–∞ —Å: {user_id}")

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥
    final_users = db.get_all_users()
    logger.info("=" * 50)
    logger.info(f"–ò–¢–û–ì: –í –±–∞–∑–µ {len(final_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
    for user in final_users:
        logger.info(f"   üë§ ID: {user.user_id}")
    db.close()
    logger.info("–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


def add_users_without_clear():
    """–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã"""
    db = Database()
    logger.info(f"–ë–∞–∑–∞: {db.db_path}")

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    current_users = db.get_all_users()
    logger.info(f"–¢–µ–∫—É—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({len(current_users)}):")
    for user in current_users:
        logger.info(f"   üë§ ID: {user.user_id}")

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    new_users = [439716429]
    logger.info(f"–î–æ–±–∞–≤–ª—è–µ–º {len(new_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
    added_count = 0
    for user_id in new_users:
        if db.add_user(user_id):
            logger.info(f"   –î–æ–±–∞–≤–ª–µ–Ω: {user_id}")
            added_count += 1
        else:
            logger.warning(f"   –£–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {user_id}")

    # –ò—Ç–æ–≥
    final_users = db.get_all_users()
    logger.info(f"–ò–¢–û–ì: –í—Å–µ–≥–æ {len(final_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    db.close()


def show_current_users():
    """–ü—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    db = Database()
    users = db.get_all_users()
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–∞–∑–µ ({len(users)}):")
    if users:
        for i, user in enumerate(users, 1):
            logger.info(f"{i:2d}. ID: {user.user_id} | Username: {user.username or 'N/A'}")
    else:
        logger.info("–ë–∞–∑–∞ –ø—É—Å—Ç–∞")
    db.close()


if __name__ == '__main__':
    while True:
        logger.info("–ú–µ–Ω–µ–¥–∂–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞")
        logger.info("=" * 40)
        logger.info("1. –û—á–∏—Å—Ç–∏—Ç—å –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ")
        logger.info("2. –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–±–µ–∑ –æ—á–∏—Å—Ç–∫–∏)")
        logger.info("3. –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        logger.info("4. –í—ã—Ö–æ–¥")
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-4): ")
        if choice == '1':
            clear_and_fill_database()
        elif choice == '2':
            add_users_without_clear()
        elif choice == '3':
            show_current_users()
        elif choice == '4':
            logger.info("–í—ã—Ö–æ–¥")
            break
        else:
            logger.error("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
