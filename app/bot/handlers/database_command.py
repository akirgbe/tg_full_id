from aiogram import Router, types
from aiogram.filters import Command

from app.config import settings
from db import db

router = Router()


@router.message(Command("add"))
async def add_user(message: types.Message):
    args = message.text.split()
    if len(args) < 2 or not args[1].isdigit():
        return await message.answer("‚ùå –£–∫–∞–∂–∏—Ç–µ ID: /add <user_id>")

    user_id = int(args[1])

    if user_id == settings.SUPER_ADMIN_ID:
        return await message.answer("üö´ –°—É–ø–µ—Ä–∞–¥–º–∏–Ω –≤—Å–µ–≥–¥–∞ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø, –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.")

    if db.add_user(user_id):
        await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ whitelist")
    else:
        await message.answer(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É–∂–µ –≤ whitelist")


@router.message(Command('remove'))
async def remove_user(message: types.Message):
    args = message.text.split()
    if len(args) < 2 or not args[1].isdigit():
        return await message.answer("‚ùå –£–∫–∞–∂–∏—Ç–µ ID: /remove <user_id>")

    user_id = int(args[1])

    # –ó–∞—â–∏—Ç–∞: –Ω–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è
    if user_id == message.from_user.id:
        return await message.answer("‚ö†Ô∏è –ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è!")

    # –ó–∞—â–∏—Ç–∞: —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞ –≤–æ–æ–±—â–µ –Ω–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å
    if user_id == settings.SUPER_ADMIN_ID:
        return await message.answer("üö´ –ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞!")

    if db.remove_user(user_id):
        await message.answer(f"üóë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É–¥–∞–ª—ë–Ω")
    else:
        await message.answer(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")


@router.message(Command("list"))
async def show_whitelist(message: types.Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ"""
    users = db.get_all_users()
    if not users:
        await message.answer("üìù –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç.")
        return

    user_list = "üìã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ:\n\n"
    for user in users:
        user_info = f"ID: {user.user_id}"
        if user.username:
            user_info += f" | @{user.username}"
        user_list += f"‚Ä¢ {user_info}\n"

    await message.answer(user_list)


@router.message(Command("check"))
async def check_access(message: types.Message):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ"""
    user_id = message.from_user.id
    if db.is_user_whitelisted(user_id):
        await message.answer("‚úÖ –í—ã –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ!")
    else:
        await message.answer("‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ.")
